SOV_paranoia_low_decrease_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_low_decrease_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_low_decrease }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_medium_decrease_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_medium_decrease_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_medium_decrease }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_high_decrease_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_high_decrease_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_high_decrease }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_high_increase_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_high_increase_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_high_increase }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_add_random_character_to_purge_targets_effect = {
	if = {
		limit = {
			check_variable = { SOV_specific_random_purge_targets_override = 0 compare = less_than }
		}
		add_to_variable = { SOV_specific_random_purge_targets_override = 2 } #Var starts at -1 so it's necessary to take it into account
	}
	else = {
		add_to_variable = { SOV_specific_random_purge_targets_override = 1 }
	}
}

SOV_trigger_great_purge_moscow_trial_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter

		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = SOV_targeted_for_purge_flag
					SOV_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						is_character_slot = political_advisor
						has_character_flag = SOV_targeted_for_purge_flag
						SOV_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?SOV_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = SOV_specific_random_purge_targets_override }
			SOV_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = SOV_paranoia_great_purge_administration_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		#log = " PEOPLE TO PURGE IS [?temp_people_to_purge]" #Debug
		#log = " INDEX IS = [?temp_targets_index]" #Debug
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}
			#log = "Random people" #Debug
			while_loop_effect = {
				limit = {
					check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
				}

				if = { #PRIORITIZE POTENTIAL TARGETS
					limit ={
						any_character = {
							is_character_slot = political_advisor
							SOV_character_can_be_purged = yes
							has_character_flag = SOV_potential_target_flag
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
						}
					}
					#log ="PRIOING STUFF" #Debug
					random_character = {
						limit = {
							is_character_slot = political_advisor
							SOV_character_can_be_purged = yes
							has_character_flag = SOV_potential_target_flag
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						clr_character_flag = SOV_potential_target_flag

						#log = "TARGET FIXED: [THIS.GetName]" #Debug
					}

				}
				else_if = { #If no one to prio, then pick a random one
					limit = {
						any_character = {
							is_character_slot = political_advisor
							SOV_character_can_be_purged = yes
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
						}
					}
					#log = "RANDOM STUFF" #Debug
					random_character = {
						limit = {
							is_character_slot = political_advisor
							SOV_character_can_be_purged = yes
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						#log = "RANDOM ADVISOR PICK: [THIS.GetName]" #Debug
					}

				}
				else = {
					#log = "RAN OUT OF POLITICAL ADVISORS, DAMN!" #Debug
				}
				add_to_temp_variable = { temp_targets_index = 1 }
				#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
			}
		}
		else = {
			#log = "No Random People" #Debug
		}
	}

	country_event = NSB_soviet_paranoia_system_events.19 # TRIGGER EVENT

	set_variable = { SOV_last_great_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_paranoia_modifier_update_gui_tooltip = { #Only updates the tooltip in the decision GUI
	ROOT = { set_variable = { SOV_paranoia_weekly_modifier_ui = SOV_paranoia_modifier_increase } } #Get default weekly modifier increase value
	ROOT = { multiply_variable = { SOV_paranoia_weekly_modifier_ui = SOV_paranoia_weekly_modifiers_amount } } #Multiply default weekly modifier increase by the number of active weekly modifiers
}

SOV_great_purge_army_trial_of_the_generals_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter

		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					OR = {
						is_army_leader = yes #Generals + Marshals
						has_army_ledger = yes
					}
					has_character_flag = SOV_targeted_for_purge_flag
					SOV_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						OR = {
							is_army_leader = yes #Generals + Marshals
							has_army_ledger = yes
						}
						has_character_flag = SOV_targeted_for_purge_flag
						SOV_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?SOV_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = SOV_specific_random_purge_targets_override }
			SOV_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = SOV_paranoia_great_purge_army_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		# PICK RANDOM PEOPLE IF APPROPRIATE
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}

			# PICK 1 FIELD MARSHAL
			hidden_effect = {
				if = { # Pick an already-targeted Marshal, if any
					limit = {
						any_army_leader = {
							is_field_marshal = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_army_leader = {
						limit = {
							is_field_marshal = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						clr_character_flag = SOV_potential_target_flag
						#ROOT = { log = "Chosen Marshal - Prioritized - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick an already-targeted Army advisor, if any
					limit = {
						any_character = {
							has_army_ledger = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_character = {
						limit = {
							has_army_ledger = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						clr_character_flag = SOV_potential_target_flag
						#ROOT = { log = "Chosen Advisor - Prioritized - [PREV.GetName]" } Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick a random marshal
					limit = {
						any_army_leader = {
							is_field_marshal = yes
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_army_leader = {
						limit = {
							is_field_marshal = yes
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						#ROOT = { log = "Chosen Marshal - Random - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick a random army advisor
					limit = {
						any_character = {
							has_army_ledger = yes
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_character = {
						limit = {
							has_army_ledger = yes
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						#ROOT = { log = "Chosen Advisor - Random - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}

				while_loop_effect = {
					limit = {
						check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
					}
					if = { #PRIORITIZE FORCED TARGETS - GENERALS
						limit ={
							any_army_leader = {
								is_corps_commander = yes
								has_character_flag = SOV_potential_target_flag
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
						}
						#log = "Prioritized General" #Debug
						random_army_leader = {
							limit = {
								is_corps_commander = yes
								has_character_flag = SOV_potential_target_flag
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
							set_character_flag = SOV_targeted_for_purge_flag
							clr_character_flag = SOV_potential_target_flag

							#ROOT = { log = "Chosen General - Prioritized - [PREV.GetName]" } #Debug
						}
						#log = "TARGET FIXED - General" #Debug
					}
					else_if = { #PRIORITIZE FORCED TARGETS - MARSHALS + ARMY ADVISORS
						limit ={
							any_character = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								has_character_flag = SOV_potential_target_flag
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
						}
						random_character = {
							limit = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								has_character_flag = SOV_potential_target_flag
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
							set_character_flag = SOV_targeted_for_purge_flag
							clr_character_flag = SOV_potential_target_flag

							#ROOT = { log = "Chosen Marshal/Advisor - Prioritized - [PREV.GetName]" } #Debug
						}
						#log = "TARGET FIXED - Marshal/Advisor" #Debug
					}
					else_if = { #FILL TARGET WITH RANDOM GENERALS (Could have an extra step, checking for non-Stalinist ppl, then this one)
						limit = {
							any_army_leader = {
								is_corps_commander = yes
								NOT = { has_character_flag = SOV_targeted_for_purge_flag }
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
						}
						random_army_leader = {
							limit = {
								is_corps_commander = yes
								NOT = { has_character_flag = SOV_targeted_for_purge_flag }
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
							set_character_flag = SOV_targeted_for_purge_flag

							#ROOT = { log = "Chosen General - Random - [PREV.GetName]" } #Debug
						}
						#log = "RANDOM GENERAL PICK" #Debug
					}
					else_if = { #IF NOT ENOUGH GENERALS, THEN PICK SOME EXTRA MARSHALS/ADVISORS
						limit = {
							any_character = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								NOT = { has_character_flag = SOV_targeted_for_purge_flag }
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
						}
						random_army_leader = {
							limit = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								NOT = { has_character_flag = SOV_targeted_for_purge_flag }
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
							set_character_flag = SOV_targeted_for_purge_flag

							#ROOT = { log = "Chosen Marshal/Advisor - Random - [PREV.GetName]" } #Debug

						}
						#log = "RANDOM MARSHAL/ADVISOR PICK" #Debug
					}
					else = {
						#log = "RAN OUT OF ARMY LEADERS, DAMN!" #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
					#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
				}
			}
		}
	}

	country_event = NSB_soviet_paranoia_system_events.29 # TRIGGER EVENT (PHASE 5)

	set_variable = { SOV_last_great_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_remove_paranoia_effect = { # NO MORE PARANOIA, COMRADES
	custom_effect_tooltip = SOV_stalins_cult_of_personality_tt
	set_variable = { SOV_paranoia = 0 }
	set_variable = { SOV_paranoia_modifier_increase = 0 }
	SOV_paranoia_clamp_and_update_ui_effect = yes
	clr_country_flag = SOV_paranoia_system_active_flag
	clr_country_flag = SOV_paranoia_modifier_active_flag
	if = {
		limit = {
			has_country_leader_with_trait = stalin_political_paranoia_advanced
		}
		remove_country_leader_trait = stalin_political_paranoia_advanced
	}
	else_if = {
		limit = {
			has_country_leader_with_trait = stalin_political_paranoia
		}
		remove_country_leader_trait = stalin_political_paranoia
	}

	#No more paranoia from NKVD chiefs
	hidden_effect = {
		if = {
			limit = {
				has_character = UTI_genrikh_yagoda
			}

			#Remove old trait
			if = {
				limit = {
					UTI_genrikh_yagoda = {
						has_trait = head_of_the_nkvd_yagoda_initial
					}
				}
				remove_trait = {
					character = UTI_genrikh_yagoda
					trait = head_of_the_nkvd_yagoda_initial
					slot = political_advisor
				}
			}
			else_if = {
				limit = {
					UTI_genrikh_yagoda = {
						has_trait = head_of_the_nkvd_yagoda
					}
				}
				remove_trait = {
					character = UTI_genrikh_yagoda
					trait = head_of_the_nkvd_yagoda
					slot = political_advisor
				}
			}

			#Add final trait
			add_trait = {
				character = UTI_genrikh_yagoda
				trait = head_of_the_nkvd_yagoda_no_paranoia
				slot = political_advisor
			}
			set_can_be_fired_in_advisor_role = {
				character = UTI_genrikh_yagoda 
				value = yes
			}
		}

		if = {
			limit = {
				has_character = UTI_nikolay_yezhov
			}

			#Remove old trait
			if = {
				limit = {
					UTI_nikolay_yezhov = {
						has_trait = head_of_the_nkvd_yezhov_initial
					}
				}
				remove_trait = {
					character = UTI_nikolay_yezhov
					trait = head_of_the_nkvd_yezhov_initial
					slot = political_advisor
				}
			}
			else_if = {
				limit = {
					UTI_nikolay_yezhov = {
						has_trait = head_of_the_nkvd_yezhov
					}
				}
				remove_trait = {
					character = UTI_nikolay_yezhov
					trait = head_of_the_nkvd_yezhov
					slot = political_advisor
				}
			}
			
			#Add final trait
			add_trait = {
				character = UTI_nikolay_yezhov
				trait = head_of_the_nkvd_yezhov_no_paranoia
				slot = political_advisor
			}
			set_can_be_fired_in_advisor_role = {
				character = UTI_nikolay_yezhov 
				value = yes
			}
		}

		if = {
			limit = {
				has_character = UTI_lavrenty_beriya
			}

			#Remove old trait
			if = {
				limit = {
					UTI_lavrenty_beriya = {
						has_trait = head_of_the_nkvd_beriya_initial
					}
				}
				remove_trait = {
					character = UTI_lavrenty_beriya
					trait = head_of_the_nkvd_beriya_initial
					slot = political_advisor
				}
			}
			else_if = {
				limit = {
					UTI_lavrenty_beriya = {
						has_trait = head_of_the_nkvd_beriya
					}
				}
				remove_trait = {
					character = UTI_lavrenty_beriya
					trait = head_of_the_nkvd_beriya
					slot = political_advisor
				}
			}
			
			#Add final trait
			add_trait = {
				character = UTI_lavrenty_beriya
				trait = head_of_the_nkvd_beriya_no_paranoia
				slot = political_advisor
			}
			set_can_be_fired_in_advisor_role = {
				character = UTI_lavrenty_beriya 
				value = yes
			}
		}
	}
}

SOV_foreign_politics_decision_cost_reduction_effect = { #Add more diplomacy vars here to divide and round them
	divide_variable = { SOV_pressure_country_government_cost = 2 }
	divide_variable = { SOV_promote_ideology_rallies_cost = 2 }
	divide_variable = { SOV_send_ultimatum_to_country_cost = 2 }
	divide_variable = { SOV_send_infantry_equipment_cost = 2 }
	divide_variable = { SOV_peace_deal_cost = 2 }
	divide_variable = { SOV_sinkiang_proposal_cost = 2 }

	round_variable = SOV_pressure_country_government_cost
	round_variable = SOV_promote_ideology_rallies_cost
	round_variable = SOV_send_ultimatum_to_country_cost
	round_variable = SOV_send_infantry_equipment_cost
	round_variable = SOV_peace_deal_cost
	round_variable = SOV_sinkiang_proposal_cost
}

SOV_paranoia_clamp_and_update_ui_effect = {
	clamp_variable = {
		var = SOV_paranoia
		min = 0
		max = 100
	}
	SOV_update_ui_effect = yes
}

SOV_reset_specific_random_target_override_effect = {
	set_variable = { SOV_specific_random_purge_targets_override = -1 }
}

SOV_update_ui_effect = {
	if = {
		limit = {
			check_variable = { SOV_paranoia = 0 }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 1 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 5 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 2 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 10 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 3 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 15 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 4 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 20 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 5 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 25 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 6 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 30 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 7 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 35 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 8 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 40 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 9 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 45 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 10 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 50 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 11 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 55 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 12 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 60 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 13 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 65 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 14 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 70 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 15 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 75 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 16 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 80 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 17 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 85 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 18 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 90 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 19 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 95 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 20 }
	}
	else = { # paranoia > 95
		set_variable = { SOV_paranoia_main_paranoiameter = 21 }
	}
}

